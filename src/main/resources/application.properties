spring.application.name=spring-ai-samples
spring.threads.virtual.enabled=true
#spring.ai.openai.chat.options.model=gpt-4o
#spring.ai.openai.chat.options.model=gpt-4o-mini
#spring.ai.openai.model=gpt-3.5-turbo
#spring.ai.openai.embedding.enabled=true
spring.docker.compose.enabled=false
spring.datasource.url=jdbc:postgresql://localhost:5432/vector_store
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.ai.ollama.chat.enabled=true
spring.ai.ollama.embedding.enabled=false
#spring.ai.openai.api-key=${SPRING_AI_OPENAI_API_KEY}
#logging.level.org.apache.fontbox.ttf=debug
#
management.endpoints.web.exposure.include=beans
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always
#
#spring.docker.compose.lifecycle-management=start_only

#spring.ai.openai.temperature=0.3
#spring.ai.openai.api-key=${SPRING_AI_OPENAI_API_KEY}
#spring.ai.openai.embedding-base-url=https://api.openai.com
#spring.ai.openai.embedding-api-key=${SPRING_AI_OPENAI_API_KEY}
#spring.ai.openai.embedding-model=text-embedding-ada-002
app.promptTemplate=give me the list of top {subject} players in the world in json format with their income, family, sports team
#TODO: Move above template to a separate .st file
#spring.ai.ollama.base-url=http://localhost:11434
spring.ai.ollama.chat.options.model=gemma2:2b
spring.ai.openai.chat.base-url=http://localhost:11434
#spring.ai.openai.chat.options.model=gemma2
#weather.api-key=${WEATHER_API_KEY}
#weather.api-url=https://api.weatherapi.com/v1
# Set the maximum size for individual files
spring.servlet.multipart.max-file-size=5MB
# Set the maximum size for the entire multipart request
spring.servlet.multipart.max-request-size=5MB